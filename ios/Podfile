require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.4'
install! 'cocoapods', :deterministic_uuids => false

# Temporary fix for hermes framework issue
def fix_hermes(app_name)
  path = "Pods/Target Support Files/Pods-" + app_name + "/Pods-" + app_name + "-frameworks.sh"
  lines = File.readlines(path)
  lines.insert(181, '  install_framework "${PODS_XCFRAMEWORKS_BUILD_DIR}/hermes-engine/hermes.framework"'+"\n")
  lines.insert(183, 'if [[ "$CONFIGURATION" == "Release" ]]; then'+"\n")
  lines.insert(184, '  install_framework "${PODS_XCFRAMEWORKS_BUILD_DIR}/hermes-engine/hermes.framework"'+"\n")
  lines.insert(185, "fi\n")
  File.write(path, lines.join, mode: "w")
  puts "Hermes fixed"
end

target 'RNStarter' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # NONE RN DEFAULTS
  #

  # react-native-permissions
  permissions_path = '../node_modules/react-native-permissions/ios'

  # pod 'Permission-AppTrackingTransparency', :path => "#{permissions_path}/AppTrackingTransparency"
  # pod 'Permission-BluetoothPeripheral', :path => "#{permissions_path}/BluetoothPeripheral"
  # pod 'Permission-Calendars', :path => "#{permissions_path}/Calendars"
  # pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
  # pod 'Permission-Contacts', :path => "#{permissions_path}/Contacts"
  pod 'Permission-FaceID', :path => "#{permissions_path}/FaceID"
  # pod 'Permission-LocationAccuracy', :path => "#{permissions_path}/LocationAccuracy"
  # pod 'Permission-LocationAlways', :path => "#{permissions_path}/LocationAlways"
  # pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse"
  # pod 'Permission-MediaLibrary', :path => "#{permissions_path}/MediaLibrary"
  # pod 'Permission-Microphone', :path => "#{permissions_path}/Microphone"
  # pod 'Permission-Motion', :path => "#{permissions_path}/Motion"
  # pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications"
  # pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"
  # pod 'Permission-PhotoLibraryAddOnly', :path => "#{permissions_path}/PhotoLibraryAddOnly"
  # pod 'Permission-Reminders', :path => "#{permissions_path}/Reminders"
  # pod 'Permission-Siri', :path => "#{permissions_path}/Siri"
  # pod 'Permission-SpeechRecognition', :path => "#{permissions_path}/SpeechRecognition"
  # pod 'Permission-StoreKit', :path => "#{permissions_path}/StoreKit"
  # END NON RN DEFAULTS

  target 'RNStarterTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    # Herme framework temporary fix
    fix_hermes('RNStarter')
  end
end
